{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","init","canvas","document","getElementById","gl","initWebGL","clearColor","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","viewport","width","height","getContext","alert"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,eCEA,SAAAK,KACI,GAAIC,GAA4BC,SAASC,eAAe,WAGxDC,GAAKC,EAAUJ,GAGVG,IAKLA,EAAGE,WAAW,EAAK,EAAK,EAAK,GAE7BF,EAAGG,OAAOH,EAAGI,YACbJ,EAAGK,UAAUL,EAAGM,QAEhBN,EAAGO,MAAMP,EAAGQ,iBAAmBR,EAAGS,kBAGlCT,EAAGU,SAAS,EAAG,EAAGb,EAAOc,MAAOd,EAAOe,SAG3C,QAAAX,GAAmBJ,GAWf,MAVAG,GAAK,KAGLA,EAAKH,EAAOgB,WAAW,UAAYhB,EAAOgB,WAAW,sBAGhDb,GACDc,MAAM,gEAGHd,EApCX,GAAIA,EAuCJJ","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var gl: WebGLRenderingContext;\n\nfunction init() {\n    let canvas = <HTMLCanvasElement>document.getElementById(\"glcanvas\");\n\n    // Initialize the GL context\n    gl = initWebGL(canvas);\n\n    // Stop if we have no GL context\n    if (!gl) {\n        return;\n    }\n\n    // Set clear color to opaque black\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    // Enable depth test\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n    // Clear color and depth buffers\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Set the resolution of the context\n    gl.viewport(0, 0, canvas.width, canvas.height);\n}\n\nfunction initWebGL(canvas: HTMLCanvasElement) {\n    gl = null;\n\n    // Try to get the standard context, or fallback to experimental\n    gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n\n    // Stop if we don't have a context\n    if (!gl) {\n        alert(\"Unable to initialize WebGL. Your browser may not support it.\");\n    }\n\n    return gl;\n}\n\ninit();"]}